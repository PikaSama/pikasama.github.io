[{"title":"离别，是为了更好的重逢","date":"2020-10-18T19:09:44.000Z","date_formatted":{"ll":"2020年10月18日","L":"2020/10/18","MM-DD":"10-18"},"updated":"2020-12-06T09:11:42.306Z","content":"想说的话\n人总是要对事情做最坏打算的\n人总是要有一定的风控能力的\n风光一时，不可风光一世\n就如”神龟虽寿，犹有竞时；腾蛇乘雾，终为土灰“一般\n我不想让我的生活掀起什么大波大浪\n但社会强迫我不得不去改变\n社会的毒打让我再次清醒\n我不要被那些所谓的”强者“踩在脚下\n真正的强者，是打倒对手后，又向对手伸出援手\n但这也只是道德的问题，这只是”独赢“和”共赢“的问题\n最后还是得靠自己一个人\n努力，就要有付出；付出，就要有取舍\n屠龙者终成恶龙，我不得不活出自己讨厌的样子\n所以，努力吧，为了那个触不可及的未来\n也许在不久之后，我会感叹\n”这个世界就是这么魔幻啊“\n感谢\n封面\nPixiv_ID: 62560074\n","thumbnail":"//cdn.jsdelivr.net/gh/PikaSama/shelter-static@1.5.1/images/pixiv_62560074.png","plink":"https://shelter.beaa.cn/posts/sayonara/"},{"title":"Inside主题进阶配置 | 附加篇","date":"2020-08-15T08:57:42.000Z","date_formatted":{"ll":"2020年8月15日","L":"2020/08/15","MM-DD":"08-15"},"updated":"2020-12-06T09:11:42.306Z","content":"前言\n这是上一篇文章的续篇，用于介绍一些我给主题做的拓展功能\n注意：本文中的代码均不是死的，需要根据你的情况自己修改\n阅读这篇文章，你可能需要一定的知识储备：\n\nHTML基础\nJavaScript基础\nCSS基础\n\n不用害怕，因为我也是菜逼～\n\n自定义函数\n博客的自定义资源均由scriptLoader-xxxx.js进行加载\n而scriptLoader.js的作用就是保证我自定义的，需要全局使用的函数能被预先加载，从而继续在指定种类的页面加载指定资源\n以下是我自定义的一些函数，在这篇文章中需要用到\ncustomFuncs.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081/* Author: Zorin Github: https://github.com/PikaSama License: GPL-3.0 License Description: Personal functions. */// 延迟函数function delay(ms,func) &#123;    return new Promise(resolve =&gt; &#123;        setTimeout(() =&gt; &#123;            if (typeof func == &quot;function&quot;)&#123;                func();            &#125;            resolve();        &#125;,ms);    &#125;);&#125;// 动态文字，简化版function dynamicType(arr,ts,bs) &#123;    const options = &#123;        strings: arr,        startDelay: 0,        backDelay: 1000,        typeSpeed: ts || 80,        backSpeed: bs || 60,        loop: true,        showCursor: true,        contentType: &#x27;html&#x27;,        smartBackspace: true    &#125;    const type = new Typed(&quot;#typedtext&quot;,options);&#125;// 通知系统，简化版function customNtf(options) &#123;    let myntf = new NotificationFx(&#123;        wrapper: document.body,        message: options.text,        layout: options.layout,        effect: options.effect,        type: &#x27;error&#x27;,        ttl: options.ttl,        onClose : () =&gt; false,        onOpen : () =&gt; false    &#125;);    myntf.show();&#125;// 公告通知async function announce(css,ver,lc,ld) &#123;    css.append(&#x27;&lt;link id=&quot;jelly&quot; href=&quot;//cdn.jsdelivr.net/gh/PikaSama/shelter-images@&#x27; + ver + &#x27;/static/ns-style-growl.css&quot; rel=&quot;stylesheet&quot;&gt;&#x27;);    await delay(1000);    customNtf(&#123;        text: &#x27;&lt;p&gt;🔔【公告】——2020.8.3&lt;br /&gt;叮咚！博客有文章更新啦~&lt;br /&gt;更新列表：&lt;br /&gt;&lt;a href=&quot;/posts/inside-configuration&quot;&gt;[持续更新]Inside主题进阶配置&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;快去看看吧~&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a id=&quot;confirm&quot; href=&quot;&#x27; + lc + &#x27;#cofirmed&quot;&gt;确认公告&lt;/a&gt;&lt;/p&gt;&#x27;,        layout: &#x27;growl&#x27;,        effect: &#x27;jelly&#x27;,        ttl: 10000    &#125;);    confirmAnnounce(ld);&#125;// 确认公告按钮function confirmAnnounce(ld) &#123;    // 监听按钮点击事件    $(&quot;a#confirm&quot;).click(() =&gt; &#123;        // 关闭公告通知        $(&quot;.ns-box.ns-growl.ns-effect-jelly.ns-type-error.ns-show .ns-close&quot;).click();        // 写入已读日期        localStorage.setItem(&quot;announcement_date&quot;, ld);    &#125;);&#125;// 新人查阅指南后的通知async function checkedNotification(css,ver) &#123;    css.append(&#x27;&lt;link id=&quot;jelly&quot; href=&quot;//cdn.jsdelivr.net/gh/PikaSama/shelter-images@&#x27; + ver + &#x27;/static/ns-style-growl.css&quot; rel=&quot;stylesheet&quot;&gt;&#x27;);    await delay(1600);    customNtf(&#123;        text: &#x27;&lt;p&gt;🔔【消息】&lt;br /&gt;恭喜～你已经正式进入了避难所(Shelter)～&lt;br /&gt;页面将在5秒后跳转至首页，请耐心等待～&lt;br /&gt;无法跳转？试试&amp;nbsp;&amp;nbsp;&lt;a href=&quot;/&quot;&gt;手动跳转&lt;/a&gt;&lt;/p&gt;&#x27;,        layout: &#x27;growl&#x27;,        effect: &#x27;jelly&#x27;,        ttl: 5500    &#125;);    await delay(5000);    window.location.href=&quot;/&quot;;&#125;\n通知系统\n这个我是在一个约5年前的css+js项目里看到的(难以想象5年前的项目竟然这么好康)\n项目地址：NotificationStyles\n\n\n图片预览\n有很多种通知样式可以选，但使用多个通知可能会造成样式的冲突。\n如果你发现使用多个通知会有冲突，请只引用ns-default.css这个样式文件，在要用到指定通知时才加载指定的样式文件。（目前暂未找到同时显示的最优解决方案，这个方法是用于解决错开显示不同种类通知造成的样式冲突）\n使用通知系统，需要加入以下依赖\n12345plugins:  - //cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.3.15/static/ns-default.css  - //cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.3.15/static/NotificationFx.js  - //cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.3.14/static/modernizr.custom.js  - //cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.3.14/static/classie.js\n用法(简化后的)：\n123456customNtf(&#123;    text: &#39;Hello~&#39;,    layout: &#39;other&#39;,    effect: &#39;thumbslider&#39;,    ttl: 1000&#125;);\n\ntext：通知内容\nlayout：通知样式种类\neffect：样式效果\nttl：通知持续时间\n\n上面代码的样式就是新人通知的样式，普通通知、公告的样式是growl样式中的jelly特效。\n如果文本内容过长或其他原因造成通知显示不够标准，需要自行修改css\n新人通知\n受主题群里一位大佬的启发，本来想做个新人引导的，但是找不到什么好看的样式，而且我个人也比较反感这种“被人教做事”或者说是“被强迫做事”的感觉，于是发现了通知系统之后就想着给新人发个通知行了，看不看入站指南是他们的意愿hhh\n识别新人的原理就是判断客户端有没有标识符，没有就推送通知，以前用的是Cookie方式，现在改为localStorage方式。（但这玩意的性能好像略低于前者）\n代码分为两个文件：\n\nntfSystem.js：用于显示新人通知和公告\nntfSystem-page.js：用于显示阅读指南后的通知(包含后文的自定义配置方面的代码)\n\n公告\n同上，公告的判断方式为：浏览者的已读日期不存在或不等于最新的公告日期，且不是新人，显示公告\n存储方式也是localStorage(后面的都是，只要涉及到数据的长期存储)\n注意：该功能仅对非新人开放，要是新人看得到这通知，那不得眼花缭乱了～\n代码过长，可通过toc按钮（右下角小圆点，展开的三条杠按钮）跳转至下一个标题\nntfSystem.js1234567891011121314151617181920212223242526272829303132333435363738394041424344/* Author: Zorin Github: https://github.com/PikaSama License: GPL-3.0 License Description: Notification system, including notification for newbie and annoucement features. */(async () =&gt; &#123;    await delay(1000);    // 新人标识    const newv = localStorage.getItem(&quot;newbie&quot;);    // 页面路径    const lc = window.location.pathname;    // 已读公告日期    const ad = localStorage.getItem(&quot;announcement_date&quot;);    // 最新公告日期    const ld = &quot;2020.8.3&quot;;    // 静态资源版本    const ver = &quot;1.3.12&quot;;    const cssPlace = $(&quot;head&quot;);    // 新人通知    const newbientf = async () =&gt; &#123;        cssPlace.append(&#x27;&lt;link id=&quot;thumbslider&quot; href=&quot;//cdn.jsdelivr.net/gh/PikaSama/shelter-images@&#x27; + ver + &#x27;/static/ns-style-other.css&quot; rel=&quot;stylesheet&quot;&gt;&#x27;);        await delay(1000);        customNtf(&#123;            text: &#x27;&lt;div class=&quot;ns-thumb&quot;&gt;&lt;img height=&quot;72px&quot; width=&quot;72px&quot; src=&quot;https://cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.3.4/images/icon.png&quot;/&gt;&lt;/div&gt;&lt;div style=&quot;width:280px;&quot; class=&quot;ns-content&quot;&gt;&lt;p&gt;第一次访问博客？来看看&lt;a style=&quot;color:#1eb4f0;&quot; href=&quot;https://shelter.beaa.cn/help&quot;&gt;使用教程&lt;/a&gt;&amp;nbsp;叭~&lt;br /&gt;移动端请点击右下角的圆点打开侧边栏“&lt;span class=&quot;φbg icon-sidebar&quot;&gt;&lt;/span&gt;”&lt;br /&gt;(浏览后即可永久关闭此通知)&lt;/p&gt;&lt;/div&gt;&#x27;,            layout: &#x27;other&#x27;,            effect: &#x27;thumbslider&#x27;,            ttl: 10000        &#125;);        // 修改通知长度        await delay(600);        $(&quot;.ns-box.ns-other.ns-effect-thumbslider.ns-type-error .ns-box-inner&quot;).attr(&quot;style&quot;,&quot;width:340px;&quot;);    &#125;    // 显示新人通知    if (newv == null) &#123;        await newbientf();    &#125;    else &#123;        // 判断条件，显示公告        if ((ad == null || ad != ld) &amp;&amp; newv != null) &#123;            announce(cssPlace,ver,lc,ld);        &#125;    &#125;&#125;)();\nntfSystem-page.js12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/* Author: Zorin Github: https://github.com/PikaSama License: GPL-3.0 License Description: An extension of ntfSystem.js. */(async () =&gt; &#123;    await delay(1000);    // 新人标识    let neo = localStorage.getItem(&quot;newbie&quot;);    // 页面路径    const locate = window.location.pathname;    const cssPlace = $(&quot;head&quot;);    const thumbslider = &quot;.ns-box.ns-other.ns-effect-thumbslider.ns-type-error&quot;;    // 静态资源文件版本    const ver = &quot;1.3.12&quot;;    // 初始配置    let autoNight = &quot;0&quot;;    let defaultTheme = &quot;0&quot;;    let defaultWidget = &quot;0&quot;;    let sidebarBackground = &quot;0&quot;;    let clickEffect = &quot;0&quot;;    let live2d = &quot;1&quot;;    let wordcountMode = &quot;0&quot;;    let bqb = &quot;https://cdn.jsdelivr.net/npm/alus@latest\\nhttps://cdn.jsdelivr.net/gh/MiniValine/Bilibilis@latest\\nhttps://cdn.jsdelivr.net/gh/MiniValine/twemoji@latest\\nhttps://cdn.jsdelivr.net/gh/PikaSama/blog-emoticons@1.1.2/bilibiliHotKey\\nhttps://cdn.jsdelivr.net/gh/PikaSama/blog-emoticons@1.1.2/HONKAI3-Daily\\nhttps://cdn.jsdelivr.net/gh/PikaSama/blog-emoticons@1.1.2/HONKAI3-NEWYEAR-2019\\nhttps://cdn.jsdelivr.net/gh/PikaSama/blog-emoticons@1.1.2/HONKAI3-AIChan\\nhttps://cdn.jsdelivr.net/gh/PikaSama/blog-emoticons@1.1.2/Coolapk&quot;;    let dynamicText = &quot;0&quot;;    // 检查是否有通知阻塞    async function checkedNtf() &#123;        if (document.querySelector(thumbslider + &quot;.ns-show&quot;) != null) &#123;            $(thumbslider).attr(&quot;id&quot;,&quot;canceled&quot;);            await delay(500);            $(thumbslider).remove();            $(&quot;link#thumbslider&quot;).remove();            await checkedNotification(cssPlace,ver);        &#125;        else &#123;            $(thumbslider).remove();            $(&quot;link#thumbslider&quot;).remove();            await checkedNotification(cssPlace,ver);        &#125;    &#125;    // 新人，在入站指南页面    // 写入标识符与默认配置文件    if (neo == null &amp;&amp; locate == &quot;/help&quot;) &#123;        $(&#x27;&lt;div class=&quot;button-save&quot;&gt;&lt;span&gt;已阅&lt;i class=&quot;ri-checkbox-circle-line&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&#x27;).insertAfter(&quot;.φbk.φh.φz p:last&quot;);        $(&quot;.button-save&quot;).click(async ()=&gt;&#123;            $(&quot;.button-save&quot;).attr(&quot;class&quot;,&quot;button-save-disabled&quot;);            localStorage.setItem(&quot;newbie&quot;,&quot;0&quot;);            localStorage.setItem(&quot;auto_night&quot;,autoNight);            localStorage.setItem(&quot;default_theme&quot;,defaultTheme);            localStorage.setItem(&quot;default_theme_widget&quot;,defaultWidget);            localStorage.setItem(&quot;sidebar_widget_background&quot;,sidebarBackground);            localStorage.setItem(&quot;click_effect&quot;,clickEffect);            localStorage.setItem(&quot;live2d&quot;,live2d);            localStorage.setItem(&quot;wordcount_mode&quot;,wordcountMode);            localStorage.setItem(&quot;bqb_url&quot;,bqb);            localStorage.setItem(&quot;dynamic_text&quot;,dynamicText);            await delay(600,checkedNtf);        &#125;);    &#125;&#125;)();\n思考\n看到这里，你可能会发现：你这tm怎么都用的异步自执行函数啊？！\n是的，由于大部分代码需要延迟执行，但我又不想看到setTimeout()函数的瀑布流式代码，所以接触了一下异步的知识，用Promise + async/await 实现异步执行同步代码般的操作，这也是为什么我需要在文章前面先放一下我自定义的函数。\nsetTimeout()函数是一个定时器，可以达到延迟执行的效果，但因为是计时器，这玩意是一个像异步又不像异步的东西。为此我稍稍了解了一下js的运行机制，js解析到setTimeout()函数后会将里面的代码放入任务队列(task queue)，所有同步代码执行完后，系统会读取任务队列，看看定时器是否满足时间要求（康康到点没），满足就执行里面的代码，不满足就重复下去，这一循环成为事件循环。（event loop）\n所以要想靠setTimeout()函数延迟执行同步代码，就得写成这样\n12345678910setTimeout(()=&gt;&#123;    console.log(&quot;1 sec later.&quot;);    setTimeout(()=&gt;&#123;        console.log(&quot;2 secs later.&quot;);        setTimeout(()=&gt;&#123;            console.log(&quot;3 secs later.&quot;);            ...        &#125;,1000);    &#125;,1000);&#125;,1000)\n这样的方式，我不能接受！\n如果你想深入了解js的运行机制，具体可见此文：\nJavaScript 运行机制详解：再谈Event Loop\n设置系统\n每次浏览博客的时候，都得切换一下主题，因为刷新一下就莫得了。\n每次浏览博客的时候，点击特效，看板娘，字数统计，动态文字都tm是我主观设置出来的，很难迎合大众口味，这么死的设置，过不久我自己都要玩腻了。\n所以，设置系统横空出世（虽然有些花里胡哨的主题早就自带了，样式也比我好看多了，哈哈，哈哈哈，哈哈哈哈哈呜呜呜呜）\n这是个啥？顾名思义，就是让用户能够自定义配置文件，达到自己喜欢的浏览效果。\n注意：该功能仅对非新人开放～\n目前支持的设置：\n\n黑暗模式自动切换\n默认主题\n默认强调色\n侧边栏背景\n点击特效\nLive2d看板娘\n字数统计模式\n评论系统自定义表情包\n动态文字样式\n\n不过就我目前的能力来讲，涉及到调色盘的功能都是通过模拟点击事件实现的，所以你一开始浏览博客的0.x秒前都还是默认主题的。\nInside主题的调色盘功能用了Shadow DOM来封装，所以我们才可以直接用&lt;is-palette2&gt;&lt;/is-palette2&gt;就能弄出调色盘\n不过调色盘的ShadowRoot模式设置成closed了，外界不能对里面进行DOM操作（不能访问）\n所以要在themes.js中把attachShadow(&#123;mode:&quot;closed&quot;&#125;)改为attachShadow(&#123;mode:&quot;open&quot;&#125;)，这样就能模拟点击事件了\n为了实现这个功能，代码分为以下部分\n\ncfg-Loader.js：用于加载用户的自定义配置\ncfg-Setter.js：设置页面所用到的，用于读写自定义配置\ncfg-Counter.js：用于加载用户对统计功能的自定义配置\ncfg-Minivaline.js：用于加载用户对评论表情包的自定义配置\n\n源码…有点长，还是放地址吧\nshelter-static/js/custom/ - PikaSama\n加载动画\n跳转都设置页面时，会有几秒的加载动画\n这是用一位大佬的css项目实现的：Win10加载动画CSS\n实现原理：设置文章页面透明度为0，约2秒后插入设置界面的内容，约1秒后设置加载动画透明度为0并删除加载动画的元素，设置文章页面透明度为1，然后再删除它的style属性（也就是说加载动画就是个幌子，让你觉得好看而已）\nJS压缩\n为了提升访问速度，需要对js进行压缩，这里我用的是terser\n安装（全局）：\n1npm install -g terser\n使用：\n1terser file.js -c -m -o file.min.js --comments &quot;&#x2F;Zorin&#x2F;&quot;\n\n-c：压缩参数\n-m：简化变量名\n-o：输出路径\n–comments：需要保留的注释中的内容\n\n压缩出来的js都以 源文件名.min.js 为名\n如果要实现压缩当前目录下的所有js，可以写个shell脚本\n123456#!/bin/bashrm *.min.jsfor i in *.jsdo  terser $i -c -m -o $&#123;i%.js&#125;.min.js --comments &quot;/Zorin/&quot;done\n侧边栏\n简化\n博客的侧边栏有很多选项，但其实这挺碍眼的，所以弄了个“More”更多选项，写了个简单的淡入淡出动画，看着还行\n访问统计\n由于我给文章也加了访问统计，所以侧边栏的访问统计需要在非文章的页面才能加载（防止冲突，如果访问的是文章，那么文章里加载的卜算子统计也会补全侧边栏的访问统计）\n两者集成为一个文件sidebar.js\nsidebar.js1234567891011121314151617181920212223242526272829303132333435363738394041/* Author: Zorin Github: https://github.com/PikaSama License: GPL-3.0 License Description: A lightweight more-options button. */(async ()=&gt;&#123;    await delay(800);    const more = &quot;.φeo.φbd.φj.φc.φu.φo&quot;;    const path = window.location.pathname.slice(0,6);    let mode = 0;    if (path != &quot;/posts&quot;) &#123;        $(&quot;body&quot;).append(&#x27;&lt;script src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;&#x27;);    &#125;    $(&#x27;&lt;a class=&quot;φeo φbd φj φc φu φo&quot;&gt;📥 More&lt;/a&gt;&#x27;).insertAfter(more + &quot;:eq(3)&quot;);    $(&#x27;&lt;a class=&quot;φeo φbd φj φc φu φo&quot; style=&quot;display:none;&quot; href=&quot;/abyss&quot;&gt;🖤 Abyss&lt;/a&gt;&#x27;).insertAfter(more + &quot;:eq(4)&quot;);    $(&#x27;&lt;a class=&quot;φeo φbd φj φc φu φo&quot; style=&quot;display:none;&quot; href=&quot;/todo&quot;&gt;📃 Todo&lt;/a&gt;&#x27;).insertAfter(more + &quot;:eq(5)&quot;);    $(&#x27;&lt;a class=&quot;φeo φbd φj φc φu φo&quot; style=&quot;display:none;&quot; href=&quot;/search&quot;&gt;🔎 Search&lt;/a&gt;&#x27;).insertAfter(more + &quot;:eq(6)&quot;);    $(more + &quot;:eq(4)&quot;).click(async ()=&gt;&#123;        if (mode == 0) &#123;            mode = 1;            $(more + &quot;:eq(5)&quot;).attr(&quot;style&quot;,&quot;opacity:0;&quot;);            $(more + &quot;:eq(6)&quot;).attr(&quot;style&quot;,&quot;opacity:0;&quot;);            $(more + &quot;:eq(7)&quot;).attr(&quot;style&quot;,&quot;opacity:0;&quot;);            await delay(200);            $(more + &quot;:eq(5)&quot;).attr(&quot;style&quot;,&quot;opacity:1;transition:all 0.5s&quot;);            $(more + &quot;:eq(6)&quot;).attr(&quot;style&quot;,&quot;opacity:1;transition:all 0.5s&quot;);            $(more + &quot;:eq(7)&quot;).attr(&quot;style&quot;,&quot;opacity:1;transition:all 0.5s&quot;);        &#125;        else &#123;            mode = 0;            $(more + &quot;:eq(5)&quot;).attr(&quot;style&quot;,&quot;opacity:0;transition:all 0.5s&quot;);            $(more + &quot;:eq(6)&quot;).attr(&quot;style&quot;,&quot;opacity:0;transition:all 0.5s&quot;);            $(more + &quot;:eq(7)&quot;).attr(&quot;style&quot;,&quot;opacity:0;transition:all 0.5s&quot;);            await delay(600);            $(more + &quot;:eq(5)&quot;).attr(&quot;style&quot;,&quot;display:none;&quot;);            $(more + &quot;:eq(6)&quot;).attr(&quot;style&quot;,&quot;display:none;&quot;);            $(more + &quot;:eq(7)&quot;).attr(&quot;style&quot;,&quot;display:none;&quot;);        &#125;    &#125;);&#125;)();\n后记\n文章太短啦！\n是的，后续会更新的（flag+1）\n其实大部分内容都能在js里的注释找到，又因为我没什么时间，然后就不写了hhhh\n感谢\n项目：NotificationStyles\n文章更新日期：2020.10.11 14:07\n","thumbnail":"https://cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.2.12/images/inside.webp","plink":"https://shelter.beaa.cn/posts/inside-configuration-extra/"},{"title":"[持续更新]Inside主题进阶配置","date":"2020-07-24T00:09:44.000Z","date_formatted":{"ll":"2020年7月24日","L":"2020/07/24","MM-DD":"07-24"},"updated":"2020-12-06T09:11:42.306Z","content":"前言\ntest\n在经过两天的本地测试，以及后续的各种修修补补，博客已经正式换为Inside主题\nInside主题是一个简洁，美观，开放的主题，虽然主题内置的功能并不多，但主题提供了强大的插件功能，可在配置中添加自己想要的文件（js脚本，css样式文件等），可自定义性强\n\n注：本文涉及内容仅为Inside主题的插件配置， 基础配置请见官方文档(懒得写了hhh)\n准备\n首先主题配置文件里的Plugins项长这样\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546plugins:  # 动态插入可执行的代码片段  - position: # `sidebar` | `post` | `page` | `comments` | `avatar`, 支持数组    # HTML 片段    template:    # 也可以是相对于主题根目录的路径，例如：    template: snippets/template-1.html  # 全局加载脚本/样式  - xxx.css  - xxx.js  # 更灵活的用法  # &lt;script src=&quot;//sample.com/api.php?format=jsonp&quot; id=&quot;sample-api&quot; defer&gt;&lt;/script&gt;  - tag: script # html 标签, `script` | `style` | `link`    # Any possible attributes    src: //sample.com/api.php?format=jsonp    id: sample-api    defer: true  # &lt;link rel=&quot;stylesheet&quot; href=&quot;xxx.css&quot; disable&gt;  - tag: link    href: xxx.css    disable: true  # 内联脚本需指定 code  # &lt;script type=&quot;text/x-mathjax-config&quot;&gt;MathJax.Hub.Config(&#123;...&#125;)&lt;/script&gt;  - tag: script    type: text/x-mathjax-config    code: |        MathJax.Hub.Config(&#123;          showProcessingMessages: false,          messageStyle: &#x27;none&#x27;,          tex2jax: &#123; inlineMath: [[&#x27;s;,&#x27;s;], [&#x27;\\\\(&#x27;,&#x27;\\\\)&#x27;]] &#125;        &#125;)    # 也可以是相对于主题根目录的路径，例如：    code: snippets/mathjax-config.js  # 内联样式  # &lt;style&gt;.mycss&#123;...&#125;&lt;/style&gt;  - tag: style    code: |        .mycss &#123;          color: rebeccapurple;        &#125;    # 也可以是相对于主题根目录的路径，例如：    code: snippets/mycss.css\n如果有文件需要全局引入，也就是说你点博客的哪个地方都会加载的文件\n只需要在plugins下加上文件的路径即可\n1234plugins:  - //yourdomain.com/js/xxx.js  - //yourdomain.com/css/xxx.css  - ...\n如果你要在指定的地方加载文件，则需要这样写\n12345plugins:  - position: inject_place    template: |    &lt;script src=&quot;//yourdomain.com/js/xxx.js&quot;&gt;&lt;/script&gt;    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;//youdomain.com/css/xxx.css&quot;/&gt;\n\nposition：插入文件的位置，即你想让文件加载的位置，有五个位置\n\nsidebar：主题侧边栏下方\navatar：侧边栏个人头像\npost：文章底部\npage：页面底部\ncomments：评论，即page和post最下方\n\n\ntemplate：HTML代码片段\n\n代码压缩\nInside主题支持通过安装 html-minifier，babel 和 terser 来实现代码压缩\n若要使用此功能，请于Hexo根目录执行命令(非themes/inside/目录)\n1npm install babel-core babel-preset-env html-minifier terser --save\n前置文件\n本文中的配置需要提前引入以下文件(全局引用)\n1234567plugins:  # jquery框架  - //cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js  # Fontawsome图标&amp;字体  - //cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css  # Remixicon图标&amp;字体  - //cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\n评论系统\n目前已有很多的评论系统，国外有Gitalk，Livere，Disqus等，国内有Valine，MiniValine等\n我只用过Valine和MiniValine，所以只写这两个评论系统的配置方法\nValine\n123456789101112131415161718192021plugins:  - //cdn1.lncld.net/static/js/3.0.4/av-min.js  - //unpkg.com/valine/dist/Valine.min.js  - position: comments    template: |      &lt;sctipt&gt;        new Valine(&#123;          el: &#x27;#vcomments&#x27;,          appId: &#x27;waibiwaibi&#x27;,          appKey: &#x27;waibibabu&#x27;,          placeholder: &#x27;Leave a comment~&#x27;,          recordIP: &#x27;true&#x27;,          enableQQ: &#x27;true&#x27;,          emojiCDN: &#x27;https://youdomain.com/pics/emojis&#x27;,          emojiMaps: &#123;          &quot;1&quot;:&quot;a/1.png&quot;,          &quot;2&quot;:&quot;b/2.jpg&quot;,          //...          &#125;        &#125;)      &lt;/script&gt;\n\n\nappId：Leancloud应用的appId，必填项\n\n\nappKey：Leancloud应用的appKey，必填项\n\n\nplaceholder：评论区域占位提示符\n\n\nrecordIP：是否记录评论者IP\n\n\nenableQQ：是否启用QQ头像功能\n\n\nemojiCDN：表情包CDN\n\n\nemojiMaps：表情包列表\n\n\n自定义表情请见Valine官方文档：自定义表情\nMiniValine\n1234567891011121314151617181920plugins:  - //cdn.jsdelivr.net/npm/minivaline@4/dist/MiniValine.min.js  - position: comments    template: |      &lt;div id=&quot;#mvcomments&quot;&gt;&lt;/div&gt;      &lt;script&gt;        new MiniValine(&#123;          el: &#x27;#mvcomments&#x27;,          appId: &#x27;114514114514&#x27;,          appKey: &#x27;19198101919810&#x27;,          placeholder: &#x27;Leave a comment~&#x27;,          adminEmailMd5: &#x27;eNCRyPTmEIfUcAN&#x27;,          emoticonUrl: [            &#x27;https://cdn.jsdelivr.net/npm/alus@latest&#x27;,            &#x27;https://cdn.jsdelivr.net/gh/MiniValine/Bilibilis@latest&#x27;,            &#x27;https://cdn.jsdelivr.net/gh/MiniValine/twemoji@latest&#x27;,            //...          ]        &#125;)      &lt;/script&gt;\n这里我用的样式是DesetsP版，配置会与xCss版不同\n如果你想查看xCss版的配置，请见官方文档\n\n\nappId：Leancloud应用的appId，必填项\n\n\nappKey：Leancloud应用的appKey，必填项\n\n\nplaceholder：评论区域占位提示符\n\n\nadminEmailMd5：管理员邮箱的Md5值，使用管理员的邮箱发表评论会在头像旁有一个管理员标识\n\n另附上一个Md5加密网站：站长工具\n\n\n\nemoticonUrl：数组，表情包列表，MiniValine会解析这个目录下的index.json文件以加载表情包\n\n\n自定义表情请见MiniValine官方文档：Customize Emoticons\n我不会用Python，自己用shell写了个生成表情包列表的脚本，可传参\n项目地址：Blog-Emoticons（不要问问为什么是fork，因为源项目有表情包源文件，便于我更新 实际上是把适配Valine的移植到MiniValine）\n我在使用MiniValine时会有一个小问题，评论框的显示层级过高，导致我的页面停留在评论框的时候使用搜索功能，评论框会凸显出来，于是我写了修改显示层级的代码\n12const mvfix = $(&quot;.φbz.φh&quot;);mvfix.attr(&quot;style&quot;,&quot;z-index:0;&quot;);\n访问量统计\n我用的是不蒜子统计来进行访问量统计，配置简单\n1234plugins:  - position: sidebar    template: |      &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/script&gt;\n然后在配置文件中找到footer项下的custom，加入以下内容\n12footer:  custom: &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;PV:&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; | &lt;/span&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;UV:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;&lt;/span&gt;\n如果字体小了可以给span标签加个属性\n1&lt;span style=&quot;font-size:120%;&quot;&gt;&lt;/span&gt;\n字体大小可以自己设置，我这里是1.2倍\n如果你要在footer里添加其他内容，例如要在访问量统计下面加备案信息啊啥的，那就在后面加个换行符&lt;br /&gt;再填写内容\n代码块复制\n既然是博客，那代码复制的功能怎么少的了，于是我从之前用的主题Ayer中把代码块复制功能移植过来了\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950function wait(callback, seconds) &#123;    var timelag = null;    timelag = window.setTimeout(callback, seconds);&#125;!function (e, t, a) &#123;    var initCopyCode = function()&#123;      var copyHtml = &#x27;&#x27;;      copyHtml += &#x27;&lt;button class=&quot;btn-copy&quot; data-clipboard-snippet=&quot;&quot;&gt;&#x27;;      copyHtml += &#x27;&lt;i class=&quot;ri-file-copy-2-line&quot;&gt;&lt;/i&gt;&lt;span&gt;COPY&lt;/span&gt;&#x27;;      copyHtml += &#x27;&lt;/button&gt;&#x27;;      $(&quot;.highlight .code pre&quot;).before(copyHtml);      var clipboard = new ClipboardJS(&#x27;.btn-copy&#x27;, &#123;        target: function(trigger) &#123;          return trigger.nextElementSibling;        &#125;      &#125;);      clipboard.on(&#x27;success&#x27;, function(e) &#123;        let $btn = $(e.trigger);        $btn.addClass(&#x27;copied&#x27;);        let $icon = $($btn.find(&#x27;i&#x27;));        $icon.removeClass(&#x27;ri-file-copy-2-line&#x27;);        $icon.addClass(&#x27;ri-checkbox-circle-line&#x27;);        let $span = $($btn.find(&#x27;span&#x27;));        $span[0].innerText = &#x27;COPIED&#x27;;                wait(function () &#123; // 等待两秒钟后恢复          $icon.removeClass(&#x27;ri-checkbox-circle-line&#x27;);          $icon.addClass(&#x27;ri-file-copy-2-line&#x27;);          $span[0].innerText = &#x27;COPY&#x27;;        &#125;, 2000);      &#125;);      clipboard.on(&#x27;error&#x27;, function(e) &#123;        e.clearSelection();        let $btn = $(e.trigger);        $btn.addClass(&#x27;copy-failed&#x27;);        let $icon = $($btn.find(&#x27;i&#x27;));        $icon.removeClass(&#x27;ri-file-copy-2-line&#x27;);        $icon.addClass(&#x27;ri-time-line&#x27;);        let $span = $($btn.find(&#x27;span&#x27;));        $span[0].innerText = &#x27;COPY FAILED&#x27;;                wait(function () &#123; // 等待两秒钟后恢复          $icon.removeClass(&#x27;ri-time-line&#x27;);          $icon.addClass(&#x27;ri-file-copy-2-line&#x27;);          $span[0].innerText = &#x27;COPY&#x27;;        &#125;, 2000);      &#125;);    &#125;    initCopyCode();&#125;(window, document);\n在plugins项中添加以下内容\n12345678plugins:  - //cdn.jsdelivr.net/npm/clipboard@2/dist/clipboard.min.js  - //cdn.jsdelivr.net/gh/PikaSama/shelter-static@latest/css/clipboard.css  - position:      - post      - page    template: |      &lt;script src=&quot;你的代码&quot;&gt;&lt;/script&gt;\n字数&amp;阅读时间估计\n我翻了翻Ayer主题的文件，发现主题的字数功能是用插件hexo-wordcount来实现的（直接解析文章源文件内容）\n于是我就想在这个主题里试一下，网上的方法都是在index.swig里添加内容\n但是Inside主题的index.swig文件我是真的看不懂…\n于是我放弃了，决定使用外部统计（解析html）\n思路很简单，计算文章内&lt;p&gt;元素的文本内容长度就能知道字数了，但由于其他内容也会用到&lt;p&gt;，所以要排除掉\n于是我针对我的博客写了这样的脚本\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667// 文章信息位置    const info = $(&quot;.φgj.φr&quot;);    // 获取正文字数    let words = document.querySelector(&quot;.φbk.φh.φz&quot;).innerText.length;    // 获取正文内图片的数量    let imgs = $(&quot;.φbk.φh.φz img&quot;).length;    // 获取所有&lt;meting-js&gt;元素    let metinglist = document.querySelectorAll(&quot;meting-js&quot;);    let meting = 0;    // 是否有该元素，有则将每个元素的文本长度相加    if (metinglist.length &gt; 0) &#123;        for (let i = 0; i &lt; metinglist.length; i++) &#123;            meting = meting + metinglist[i].innerText.length;        &#125;    &#125;    // 获取所有&lt;figure&gt;元素    let codelist = document.querySelectorAll(&quot;figure&quot;);    let code = 0;    // 是否含有该元素，有则将每个元素的文本长度相加    if (codelist.length &gt; 0) &#123;        for (let j = 0; j &lt; codelist.length; j++) &#123;            code = code + codelist[j].innerText.length;        &#125;    &#125;    // 校正字数，正文字数 - 音乐插件字数 - 代码字符数    words = words - meting - code;    // 估算阅读时间，范围：全文    // 设每分钟阅读文字600字 / 代码800字符 / 图片10张    // 结果保留一位小数    let readtime = (Math.round(words / 60 + code / 80) + imgs) / 10;    // 如果字数不到1000，显示原字数    if (words &lt; 1000) &#123;        words = &#x27;&amp;nbsp;&#x27; + words + &#x27;&amp;nbsp;words&#x27;;    &#125;    // 如果字数≥1000，四舍五入字数，单位改为k，结果保留一位小数    else &#123;        words = &#x27;&amp;nbsp;&#x27; + Math.round(words / 100) / 10 + &#x27;k&#x27; + &#x27;&amp;nbsp;words&#x27;;    &#125;    // 如果阅读时间超过1分钟，加复数单位    if (readtime &gt; 1) &#123;        readtime = &#x27;&amp;nbsp;&#x27; + readtime + &#x27;&amp;nbsp;mins&#x27;;    &#125;    // 如果阅读时间≤1分钟，加单数单位    else &#123;        readtime = &#x27;&amp;nbsp;1 min&#x27;;    &#125;    // 是否含有代码    if (codelist.length &gt; 0) &#123;        // 是        // 如果代码字符数不到1000，显示原字符数        if (code &lt; 1000) &#123;            code = &#x27;&amp;nbsp;&#x27; + code + &#x27;&amp;nbsp;chars&#x27;;        &#125;        // 如果代码字符数≥1000，四舍五入字符数，单位改为k，结果保留一位小数        else &#123;            code = &#x27;&amp;nbsp;&#x27; + Math.round(code / 100) / 10 + &#x27;k&#x27; + &#x27;&amp;nbsp;chars&#x27;;        &#125;    &#125;    // 插入字数统计    info.append(&#x27;&lt;span class=&quot;words&quot;&gt;&lt;i class=&quot;ri-quill-pen-line&quot;&gt;&lt;/i&gt;&#x27; + words + &#x27;&lt;/span&gt;&#x27;);    // 是否有代码    if (codelist.length &gt; 0) &#123;        // 是，插入代码统计        info.append(&#x27;&lt;span class=&quot;codes&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;i class=&quot;ri-code-box-line&quot;&gt;&lt;/i&gt;&#x27; + code + &#x27;&lt;/span&gt;&#x27;);    &#125;    // 插入阅读时间    info.append(&#x27;&lt;span class=&quot;readtime&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;i class=&quot;ri-time-line&quot;&gt;&lt;/i&gt;&#x27; + readtime + &#x27;&lt;/span&gt;&#x27;);\n实现原理：\n\n\n获取全文的字数，获取Meting.js(音乐插件)里的字数(如果有)，获取代码的字符数(如果有)再在全文字数中减去这些字数，就能得出较为精确的字数了\n\n\n字数(精确后的字数)/600(估计每分钟浏览600字) + 代码字符数/800(估计每分钟浏览800字符) + 图片数量/10(估计每分钟浏览图片10张)，阅读时间保留一位小数\n\n\n3. 字数统计会延迟一段时间再加载(让音乐插件先加载完)，本来想做个淡入的动画效果的，但经测试手机端无法显示，就改成在加载前显示&quot;Loading…&quot;了(这个需要你自己加)\n字数统计我写了三种样式，上面是其中一种，每个统计都带单位且独立\n注：受网络环境的影响，如果文章内插入了音乐，且音乐插件在字数统计加载前还未加载完时，会影响字数统计和阅读时间的精确度\n还有，这个脚本的代码不是死的，你得根据实际情况修改，\n动态打字特效\n之前用的主题Ayer中有这个功能，了解到是用Typed.js实现的，于是也把这个功能移植到主题上了\n123456789101112131415const typeplace = $(&quot;.φee&quot;);typeplace.append(&#x27;&lt;span id=&quot;typedtext&quot;&gt;&lt;/span&gt;&#x27;);typeplace.attr(&quot;style&quot;, &quot;height:3rem; display:block; font-size: 110%;&quot;);const options = &#123;        strings: [&#x27;Ciao&#x27;,&#x27;Bonjour&#x27;,&#x27;Kon ni chi wa&#x27;],        startDelay: 0,        backDelay: 1000,        typeSpeed: 80,        backSpeed: 60,        loop: true,        showCursor: true,        contentType: &#x27;html&#x27;,        smartBackspace: true    &#125;const type = new Typed(&quot;#typedtext&quot;,options);\n如果你只是想改文字，只需要修改options对象中键strings的值就行（数组）\n&quot;^200&quot;表示在此处停顿200毫秒\n\nstartDelay：第一个文本内容开始显示的延迟\nbackDelay：在打完文本内容后回退的延迟\ntypeSpeed：打字速度\nbackSpeed：回退速度\nloop：是否循环\nshowCursor：显示光标\nsmartBackspace：是否启用智能换行功能\n\n在plguins项中添加以下内容\n12345plugins:  - //cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/typed.min.js  - position: sidebar    template: |      &lt;script src=&quot;你的代码&quot;&gt;&lt;/script&gt;\n调色盘\n调色盘是Inside主题的一个特色功能，但并不内置在主题中，需要引入文件\n我自己多加了两个主题，分别是雨滴(💧)和樱花(🌸)\n在plugins项中添加以下内容\n123456plugins:  - //cdn.jsdelivr.net/gh/PikaSama/shelter-static@latest/js/dependencies/theme.js  - //cdn.jsdelivr.net/gh/PikaSama/shelter-static@latest/js/dependencies/themes.js  - position: sidebar    template: |    &lt;is-palette2&gt;&lt;/is-palette2&gt;\n如果你想自己加主题，修改themes.js即可，文件是被压缩过的，需要用工具排版，这里还是推荐站长工具，排版完之后就很直观了，照着格式自己加，然后把你加的压缩了再加回去就行\n\naccent_color：强调色，修改行内代码块，小圆点部件，按钮激活色，滚动条颜色等\nforebackground_color：前背景颜色，意义不明\nborder_color：边框色，意义不明(貌似是描边的颜色？)\nbackground：背景色，可设置图片\nsidebar_background：侧边栏背景色，貌似只对手机端或分辨率较低的桌面端生效，桌面端一般是被背景色覆盖的，可设置图片\ncard_background：卡片颜色，对侧边栏头像卡片和文章页面生效，可设置图片\nhighlight：代码块高亮设置\n\n代码高亮\n代码高亮是用主题作者的Highlighting Palette生成的，然后做了点修改\n亮色主题的代码高亮配置\n12345678910111213141516171819# onedark (modified)  highlight: [    &quot;#282c34&quot;,    &quot;#353b45&quot;,    &quot;#3e4451&quot;,    &quot;#545862&quot;,    &quot;#f5f5f5&quot;,    &quot;#abb2bf&quot;,    &quot;#b6bdca&quot;,    &quot;#c8ccd4&quot;,    &quot;#e06c75&quot;,    &quot;#d19a66&quot;,    &quot;#e5c07b&quot;,    &quot;#98c379&quot;,    &quot;#56b6c2&quot;,    &quot;#61afef&quot;,    &quot;#c678dd&quot;,    &quot;#be5046&quot;  ]\n暗色主题的代码高亮配置\n12345678910111213141516171819# ir black (modified)  highlight: [    &quot;#000000&quot;,    &quot;#161616&quot;,    &quot;#484844&quot;,    &quot;#6c6c66&quot;,    &quot;#f5f5f5&quot;,    &quot;#b5b3aa&quot;,    &quot;#d9d7cc&quot;,    &quot;#fdfbee&quot;,    &quot;#ff6c60&quot;,    &quot;#e9c062&quot;,    &quot;#ffffb6&quot;,    &quot;#a8ff60&quot;,    &quot;#c6c5fe&quot;,    &quot;#96cbfe&quot;,    &quot;#ff73fd&quot;,    &quot;#b18a3d&quot;  ]\n以上配置也可以配置在themes.js中，用于设置每个主题的代码高亮\n鼠标点击特效\n鼠标点击时触发的特效，有三种特效可选，同样也移植于主题Ayer\n注：可能会在移动端造成卡顿、掉帧现象，如出现此现象，请更换浏览器或多刷新几次页面\n\nclickLove.js：爱心特效\n\n引入方法\n\n\n\n12plugins:  - //cdn.jsdelivr.net/gh/PikaSama/shelter-static@latest/js/dependencies/clickLove.js\n\nclickBoom1.js：粒子波动特效\n\n代码 &amp; 引入方法\n\n\n\n1234const ver = &quot;1.5.0&quot;;const canvasplace = $(&quot;.φbm.φk&quot;);canvasplace.prepend(&#x27;&lt;canvas class=&quot;fireworks&quot;&gt;&lt;/canvas&gt;&lt;style&gt;.fireworks&#123;position:fixed;left:0;top:0;z-index:99999;pointer-events:none&#125;&lt;/style&gt;&#x27;);canvasplace.append(&#x27;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/PikaSama/shelter-static@&#x27; + ver +&#x27;/js/dependencies/clickBoom1.js&quot;&gt;&lt;/script&gt;&#x27;);\n123plugins:  - //cdn.jsdelivr.net/npm/animejs@latest/anime.min.js  - 你的代码\n\nclickBoom2.js：粒子爆炸特效\n\n代码\n\n\n\n1234const ver = &quot;1.5.0&quot;;const canvasplace = $(&quot;.φbm.φk&quot;);canvasplace.prepend(&#x27;&lt;canvas width=&quot;1777&quot;height=&quot;841&quot;style=&quot;position: fixed; left: 0px; top: 0px; z-index: 99999; pointer-events: none;&quot;&gt;&lt;/canvas&gt;&#x27;);canvasplace.append(&#x27;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/PikaSama/shelter-static@&#x27; + ver + &#x27;/js/dependencies/clickBoom2.js&quot;&gt;&lt;/script&gt;&#x27;);\nLive2d看板娘\n哪个男孩不想要一个二次元看板娘呢？\n原项目地址：Live2d-widget\n你可以直接引用官方的autoload.js，如果想要自定义需要自己Fork一份，并修改autoload.js中资源加载路径为自己项目的\n看板娘的位置我放在侧边栏和文章的间隔中，不过看起来还是有点碍眼呢hhh\n位置的调整是基于我那超逊的1366x768分辨率屏幕修改了，可能会有显示差异hhh\n在plugins项中添加以下内容\n12plugins:  - //cdn.jsdelivr.net/gh/PikaSama/live2d-widget@latest/autoload.js\n音乐插件\n我在用Ayer主题的时候用的音乐插件是hexo-tag-aplayer，结果发现换到这个主题的时候就失效了\n然后我还是换成了Aplayer，只不过是官方版的\n再配合Meting.js，可以播放多家平台的音乐\n在plugins项中添加以下内容\n12345678plugins:  - //cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css  - //cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js  - position:      - post      - page    template: |      &lt;script src=&quot;//cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&quot;&gt;&lt;/script&gt;\n然后你就可以在文章里添加&lt;meting-js xxxx=&quot;xx&quot;&gt;&lt;/meting-js&gt;来播放音乐了\n具体配置方法：Meting.js\nPWA\nWriting…Maybe?\nSEO\ngo shin sa re ru，ta bu n\n后记\n终于又填完了一个坑，这主题挺适合我的，因为它要折腾很多东西，而我恰好就是个爱折腾的人hhh\n同时也要感谢Theme Inside群里的群友们的帮助&amp;贡献，谢谢你们，我在折腾的过程中学到了不少东西\n感觉自己写的还不够详细，有些都是丢文档链接的23333(其实还是懒得写)\n如果你有什么问题，可以在下面评论，有时间会一一答复的，文章有什么错误还请各位大佬指出\n因为我对这个主题加了其他功能/优化，大部分功能都集成在一个js里，所以上面的代码大多都是取部分展示出来的，不能直接引用\n如果你想进一步折腾这个主题，可以看看这篇文章\n续篇\nInside主题进阶配置-附加篇\n感谢\n博客\n\n\n无名小筑\n\n\n白桦 Birch\n\n\nFiteen’s Blog\n\n\nIkeq’s Blog(Inside主题作者的博客)\n\n\n岛 | Shen-yu(Ayer主题作者的博客)\n\n\n文章\n\n\nTheme Inside\n\n\nAdd readable time for theme inside\n\n\n【持续更新】Hexo + inside 博客个性化定制\n\n\n项目\n\n\nlive2d-widget\n\n\nAplayer\n\n\nMetingJS\n\n\n网站\n\n菜鸟教程\nw3cschool\nJavaScript | MDN\n\n封面\n\nTheme Inside\n\n其他\nTheme Inside群里的群友们\n文章更新日期：2020.10.10 19:52\n","thumbnail":"//cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.2.12/images/inside.webp","plink":"https://shelter.beaa.cn/posts/inside-configuration/"},{"title":"如何解决Leancloud的流控问题？","date":"2020-06-20T12:09:44.000Z","date_formatted":{"ll":"2020年6月20日","L":"2020/06/20","MM-DD":"06-20"},"updated":"2020-12-06T09:11:42.306Z","content":"前言\n最近登上Leancloud的后台，发现云引擎的日志里满屏都是这么一句话\nCloudQueue 运行失败 xxxxx : self_wake !! {“error”:“因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠 https://url.leanapp.cn/dwAEksv”}\n\n\n然后我点了这个链接进去看了看，官方给出的说明是这样的\n\n\n也就是说Leancloud觉得我们白嫖得太厉害了，不给我们通过定时任务来唤醒容器了\n\n通俗易懂小剧场1\n\n容器：今天又是元气满满的一天\n20分钟后\n定时唤醒任务：hxd，醒醒，别那么早就休眠了，你还有活要干\n容器：收到收到\n20分钟后\n定时唤醒任务：hxd，醒醒，别那么早就休眠了，你还有活要干\n容器：收到收到\n...\n[日志]容器运行满18小时，需要在夜间休眠6小时\n第二天\n定时唤醒任务：hxd，醒醒，该干活了\n容器：啊巴啊巴啊巴啊巴啊巴.....(休眠中)\n20分钟后\n定时唤醒任务：hxd，醒醒，该干活了\n容器：啊巴啊巴啊巴啊巴啊巴.....(休眠中)\n...\n当有外部请求时\n容器：嗯，有外部请求了？好了我醒了\n20分钟后\n定时唤醒任务：hxd，醒醒，别那么早就休眠了，你还有活要干\n容器：Yes♂Sir\n...\n\n\n现在我们不能通过定时任务唤醒休眠的容器了，但还能唤醒正在运行的容器来延长运行时间\n于是我又去网上找了各种方法，找到了一个我认为最好的解决方案\n解决方案\n虽然现在Leancloud不能通过内部请求来唤醒容器，那我们还能通过外部请求嘛\nGithub Actions\n打开Github，进入你的个人设置(Settings)\n\n点击开发者设置(Developer Settings)，找到个人访问密匙(Personal access tokens)\n\n\n创建一个新的密匙(点击Generate new token)，名称为GITHUB_TOKEN，勾选 repo admin:repo_hook workflow 选项，然后生成密匙即可(点击Generate token)\n\n然后我们需要Fork一个项目\n项目地址：WakeLeanCloud\nFork完毕后，进入项目的设置（点击Settings），找到Secrets，新建一个Secret(点击New Secret)\n\n\n名称为SITE，Value为你的博客评论系统后台管理地址，可填多个地址，用,分开，然后点击Add secret 添加secret\n\n然后我们可以给自己的项目点个Star(手动执行一次Actions)，然后点击Actions看看运行成功没有，如果你是第一次用Actions，那么会有一个使用提示，点击绿色的按钮即可\n\n如果Actions运行成功了，那么它看起来是这样的\n\n\n之后它就会在每天的8点到23点里，每20分钟唤醒Leancloud容器一次啦\nPS：由于唤醒大约耗时2分钟，所以唤醒脚本里的cron表达式是18而不是20\n如果你想改时间，那么修改.github/workflows/autoWakeup.yml中的cron表达式即可\nPS：时区默认为UTC，我们的时区是UTC+8，所以你的时间需要减8个小时\n这里奉上一个cron表达式的生成器：Link\n\n如果你嫌commit多太烦人，那么可以设置为外部唤醒一次，其余都交给Leancloud的定时任务来唤醒即可\n比如我将.github/workflows/autoWakeup.yml中的cron表达式改为55 22 * * *\n那么它就会在每天早上6点55分唤醒Leancloud容器一次啦\n\n通俗易懂小剧场2\n\n外部请求多次\n外部请求(首次)：铁子，该干活了\n容器：OKOK\n20分钟后\n外部请求：老哥，还有活要干，别休眠了\n容器：OKOK\n...\n外部请求一次\n外部请求：起床干活GKD\n容器：好der\n20分钟后\n定时唤醒任务：hxd，醒醒，别那么早就休眠了，你还有活要干\n容器：收到收到\n...\n\n\n我用的是只发送一次外部请求的方法，这里奉上我在Leancloud定时任务中的cron表达式\n\n先在早上6点55分外部请求唤醒容器，然后从7点开始23点结束，每20分钟内部唤醒容器一次，同时在7点5分补上漏发的邮件，这样也能达到延长容器运行时间的目的\n后记\n其实还有其他方案的，不过我认为这个方案是最好的，有空再写其他的\n看着满屏的self_wake函数运行成功，心里真TM爽\n最后感谢Dreamy.TZK的文章和项目\n感谢\n部分图片\n\n优雅解决Leancloud流控问题\n\n文章\n\n优雅解决Leancloud流控问题\n\n项目\n\nWakeLeanCloud\n\n文章更新日期：2020.6.21 18:40\n","thumbnail":"//cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.1.8/images/lncld.png","plink":"https://shelter.beaa.cn/posts/wakeleancloud/"},{"title":"星与你，消失之日","date":"2020-06-19T22:50:13.000Z","date_formatted":{"ll":"2020年6月19日","L":"2020/06/19","MM-DD":"06-19"},"updated":"2020-12-06T09:11:42.306Z","content":"\n白虹贯日圣贤王一统天下，参商永隔再相逢物是人非。\n天冲临宫借东风再战祸斗，荧惑守心兵马变烽火四起。\n三日并出反叛军攻守同盟，七夕相会煌月城千灯璀璨。\n\n灯影重重溯人潮暗潮涌动，千钧一发解玄机危机四伏。\n巧施谋略花灯引古人相逢，神机妙算烟火落皆是徒劳。\n知天易，逆天难，千般执念终成空。\n— 星与你消失之日\n\n我曾与你共度未来，却不曾知晓你的过去。\n那时的你，和现在的你一样，背负着别人的生死，\n在你活着的时间里，不断被迫重复着过去。\n你还在痛苦着，但你始终没有忘记自己的痛苦。\n而我终于来到你的过去，\n给那一场穿梭在「世界的碎片」间的漫长之旅写下开始的音符。\n哭吧，哭吧，\n感到痛苦的话，像小孩子一样哭到筋疲力尽就好。\n痛苦并不可怕，可怕的是习惯了痛苦后，再也接受不到痛苦。\n因为你不再将自己置于亲历者的境地，而是成为一个旁观者，\n就像现在的我一样，目睹着你经历的那些惨剧。\n“但是想要了解人类，就决不能只是在一旁看着。”\n“你必须和他们站在一起，看看他们在看些什么。”\n这是在遥远的未来，你对我说过的话。\n现在的我试图站在你身边，\n你又在看着什么呢？\n若是还存在着其他旁观者，此时他们一定对你充满期待，\n期待你跨越更多的死亡，直到抵达没有人受伤的圆满结局。\n他们不知道，也不关心你曾经历了什么。\n你所经历的失而复得与得而复失，\n对他们来说也不过是个故事，\n一个他们自以为能猜到结局的故事，\n但现实真会如此吗？\n这个故事无关乎拯救与被拯救，\n它的结局不断被修补着，又生出新的裂痕。\n而你是那个重复、重复、\n重复尝试、遍历痛苦的人。\n做不到的事，不会因为坚持而做到，\n也不会因为一句“我能做到”而发生奇迹。\n我知道，其实你也知道，\n即使你已足够拼命，但现在的你没有这样的能力。\n但我在这里，试图给你提供一个能够破局的契机。\n这就是我……存在于此的意义。\n— Tesla·Zero\n对于一个刚玩三蹦子没多久的菜逼来说，这次的活动剧情搞的我一头雾水，因为三蹦子每一次的活动剧情都是有关联的，这就会导致我们萌新玩家一开始对剧情有了一堆问号，后来我去B站看了一些视频翻了一些评论才能理解活动剧情。\n这次剧情是真的刀，本以为好不容易来了一波糖，结果还是满嘴的刀。\n其实到了剧情后面就会知道，许愿机器格雷姆被祸斗破坏，机器进入自律管理模式（人工智障模式，理解能力降为负数），然后进入自律管理模式后要扫描之前对它许过愿的人，没扫描到观星（当时和舰长传到另一个世界碎片），就认为观星死了，多年后观星成功传送回来，格雷姆就觉得这个观星是个“异物”，要不计代价去消灭她，所以观星注定会死，就有了各种奇葩的死法。\n隔壁的傻子是犹大的N种用法，这个傻子是自我的N种死法。\n不过最后结局还是美好的，既然观星是“异物”，那么让她消失的一种方法就是带她上船，结果就真带上船了。（OHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH ! ! !）\n看着最后观星和舰长老夫老妻般的交谈，我真是在床上扭的像条蛆一样（bushi\n注：最后剧情的时间线是不一样的，这个时候观星已经被舰长带上船有一段时间了\n小特有一段话反映了现在的一种现象：玩家只想看到完美结局\n当然，人永远都是倾向于美好的事物的，并且他们只喜欢看到他们所希望的，而往往忽略了全局。\n但是，没有痛苦，又哪来的美好，又怎么能让你印象深刻，又怎么能让你有深刻体会呢？\n我们所追寻的美好，难道仅仅是因为喊一句“我能行！”就能追寻得到的吗？\n如果真是这样，在座的各位都已经是成功人士了。\n“完美”的定义是什么？\n是主角喊出了开挂密码“我们Mihuyo真是太NB了，我爱Mihuyo！”，登上了大号，一刀999，从此走上事业巅峰，拥有后宫佳丽三千，成为人生赢家？\n你这跟无脑的龙傲天有什么区别？你要爽，请去看爽番。\n我并不在乎一个动漫，一个电影，一个游戏的结局能有多完美，那些过于完美的龙傲天剧情只会让我觉得我看了一个没有营养的东西。个人而言，只要结局合情合理即可，它有这个结局肯定有它的道理，我不觉得会有NT带有恶意地去写一个BE，这对双方来讲都是吃亏的(除非他做这个就是为了挥霍钱)，所以我不会追究那么多。要是我真遇到BE了，我也不会在评论区下面血口喷人，而是默默地在P站等网站找同人漫画来安慰自己，上逼乎看大佬分析，让自己觉得结局是美好的。\nJO5中，布姐，小飞机，茶哥都去了那个我们未曾看过的世界，我也不会因为这个大喊荒木司马，荒木老贼把这些人物塑造得很好，他们死的有意义。茸茸也终于成为了秧歌Star，这个结局自然不算坏的。\n我没玩过太多的游戏，感觉米忽悠做的剧情真的是一股清流(大多数玩家都被龙傲天剧情麻痹了)我快被刀傻了，刀中还带点糖的那种\n理智观看剧情，理智对待游戏。\n不过我还是想说一句：\n我永远喜欢月下和观星！观星真是太戳我的XP了，米忽悠画师可真懂我们绅士的需求。\n\n文章更新日期：2020.8.10 23:48\n","plink":"https://shelter.beaa.cn/posts/honkai-star/"},{"title":"我不是盘神！","date":"2020-04-18T23:52:13.000Z","date_formatted":{"ll":"2020年4月18日","L":"2020/04/18","MM-DD":"04-18"},"updated":"2020-12-06T09:11:42.306Z","content":"谈谈PD事件\n\n2020年4月15日，Pandownload软件作者被跨省追捕，受害人刘某称其软件会在未授权的情况下把个人数据分享出去，导致隐私照片和文件被泄露，警方发现该软件可以以非会员权限突破百度网盘官方设定，实现高速下载，系侵入、非法控制计算机信息系统的程序、工具，并且该软件的使用者达到数万人，致使百度公司损失高达上千万元，犯罪嫌疑人涉嫌非法获利30万元。\n\n\n我求求你们别再追查Pandownload了，行吗？263块的超级会员svip，我充了三年，房子充没了。现在好不容易有了速度快的，你们非说它是假的。那软件假不假我们能不知道吗?那软件本来就不用花钱，你说制作者能赚钱吗？谁家能不下载呢，你就能保证你这一辈子不下载吗？你把他抓走了，我们都得2kb/s。我不想慢，我想快点。 ——《我不是盘神》\n\n\n01\n百度网盘当初是怎么火起来的？靠的就是大容量和不限速下载，吸引了一大批的用户，造成了当时的同行被百度死死地掐住了脖子，相继退出网盘市场。这场网盘的战争，赢家是百度。\n就在这时，百度几乎是一家独大。好了，用户有了，接下来就是会员的时代了，因为这是它收费的最佳时候，所以，网盘会员就诞生了，当时价格挺低的，十几块钱一个月吧，高速下载，在线解压缩什么的样样齐全，但也还是有不少用户抱怨，但是百度哪会听你的意见？过了一段时间，百度就觉得就算有了这个会员我们还是在亏损，这样下去吃枣药丸，于是来了一波骚操作，超级会员诞生了，只有超级会员才能享受高速下载的权利，那普通会员呢？偷掉普通用户的上传带宽来给他们加速不就行了。这，就是现在的百度网盘。\n02\n这个时候大部分用户都愤怒了，纷纷转去其他网盘，但是，他们在百度网盘里的文件要怎么办？\n百度网盘绑架了用户。\n有些用户只好去充超级会员，可好景不长，前一段时间的下载速度还很快，现在就算是超级会员，下载速度也只有0kb/s~1m/s\n用户：“钱我们都交了，但为什么还要限我的速？”\n百度：“难道我们架设服务器，维护服务器不用钱的吗？能给你们用就不错了，你越抱怨我就越限你速！”\n一场用户与百度网盘的战争开始了。\n03\n从开始限速的那一刻起，用户与百度网盘的战争就开始了。先是提取直链高速下载，又是使用aria2多线程下载，再而就是其他第三方软件的玄学高速下载。百度也不甘心，为此做了很多对策，例如限制账号登陆才能下载，封ip，拉用户黑名单等。这其中就有一个软件，与百度斗争了多年，他就是Pandownload，他备受众多用户青睐，因为他可以不限速下载文件，又有多种下载方式，网盘资源搜索，剪贴板自动识别分享链接等功能，而这些功能是百度网盘没有的。\n后来，百度又进行了一系列恶心的操作，昔日的那个Pandownload变得不再那么给力，虽然有时候运气好的话就能高速下载，但是大文件是不可能的了。\n04\n虽然我们一开始用这软件的时候就会思考：这软件这么牛逼，会不会违法了？被百度发现这软件就凉了。但我们都是本着能用一时就是一时的心态来用这软件的，可是却没想到，灾难会来得这么快。\n他，那个与百度斗争多年的勇士，终究还是倒下了\n2020.4.15，请记住这个日子，这是Pandownload作者被抓的那一天，这是那个配伴了我们整整3年的软件，如今却已经结束了他“罪恶”的一生。\n这一次，百度又赢了，一个大公司拍死了一个个人开发者，这也是中国知识产权保护的胜利，保护了资本的利益。\n互联网精神已死。\n05\n为什么那么多人会站在Pandownload一边？\n一句话：百度网盘没有尊重过用户的体验。\nN句话：当“盗版”软件的体验胜过于正版软件，而正版软件还不思悔改，继续自己的老本行，你说用户会站在哪边？\n我家的宽带是200M，我从网上找来一个4G的Windows10系统镜像，不幸的是，分享链接是百度网盘，为了高速下载，我充了超级会员，开始的速度还挺快，但过了一会就掉到100kb/s，再过一会掉到了9kb/s，并且还时不时断开连接，我很愤怒，本以为充了超级会员就能高速下载，没想到却是这样，期望值和现实的差距太大，既然我交了钱，那我就应该拥有相应的服务，而不是给我限速。\n不要跟我说什么架设维护服务器的成本高，我交了钱，你就不应该给我限速，你这是侵犯了我的利益。\n有些人用Pandownload，不是被他不限速下载的功能拉拢来的，而是因为他的其他功能，网盘资源搜索给用户带来了很大的便利。\n想想苹果当年的越狱风波，因为苹果吸取了教训，改进了IOS的用户体验，所以现在大部分人都不会去越狱了。但是百度网盘呢？你们自己心里有数。\n06\n刘某确定不是百度的托？\n在我看来，是的。\nPandownload活了这么久，我不信百度一开始就没有注意到他，怕不是在等待一个最佳的时机。\n而且理由是泄露隐私，说真的，你给我整笑了，请问百度有把隐私做好吗？你在用Pandownload的时候没有看到提示吗？\n\nPandownload会采集你的分享链接里的信息和提取码上传到云端，用于资源搜索和提取码查询服务。\n\n你不要就在设置里关掉。如果你装了移动端的百度网盘，你啥都不看直接一顿操作点下去，好了，你的相册就上传到百度网盘了。\n那我是不是可以告百度网盘它泄露我隐私了？\n不过我也告不起，毕竟是BAT三大巨头中B公司旗下的软件，法务部虽然比不过T公司的南山必胜客，但也足以打压我这个小布尔乔亚了。\n李彦宏说过一句话：\n\n“中国的消费者在隐私保护的前提下，很多时候是愿意以一定的个人数据授权使用，去换取更加便捷的服务的”\n\n说明白点就是：\n\n“中国人愿意用隐私换取便捷性”\n\n还有就是那句“致使百度公司损失高达上千万元”，你这受害者不是刘某吗，怎么变成百度公司了？\n07\n“犯罪嫌疑人涉嫌非法获利30万元”，那30万是通过QQ的付费入群和捐赠得来的，付费入群无非只是抢先体验最新版本而已，作者过一两天就发布了，而且付费入群都是用户自愿的。\n抱歉，我并不认为这是非法盈利。\n同时，百度网盘的收费模式不够妥当。\n30元一个月超级会员，平均每天一块钱，听起来是挺不错，但谁会每天都用百度网盘？\n我一个月也就用两三次而已，我才用这么几次就30元，那我不是血亏？\n我们会用百度网盘，仅仅只是因为资源分享者是上传到百度网盘的而已，每次看到分享链接是百度网盘我就蛋疼，不然你以为我会用？\n08\n如果说互联网精神在90年代崛起，在00年代成熟，在10年代老去，那么他就会在20年代死去。\n这一次的事件给国内的所有开发者都敲响了一个警钟。\n\n“说句实话，那个罪在计算机方面基本上就是个口袋罪了，入侵系统定义地模糊不清，完全就是想抓才抓，压力测试，安全测试，哪怕是普通的编程软件都可以扣上一个这样的帽子，真要抓，李老板先看看自己该吃几年公家饭，而且360电脑管家之类的早就该抓了。”\n——视频BV1cV411Z7zu中用户焱锬焱的评论\n\n\n以下哪些行为是违法犯罪行为?\nA. 污染整个地区的DNS请求,返回无效IP\nB. 在主干网上进行劫持,对特定网站发起Https Mitm攻击\nC. 篡改HTTP响应并插入攻击脚本,对特定网站发起DDoS攻击\nD. 使用多线程下载百度云\n——视频BV1cV411Z7zu中用户ArinkX的评论\n\n豫章书院你不管，泄露隐私你重拳出击。\n这真的是人民警察吗？\n09\n说实话，3年30万，月薪不过万，有这个技术去工作都能有很好的收入，百度为什么就不把他招进来呢？\n看看雷布斯，那些曾经的对手，现在都是他公司的一员了。\n以后碰到宝藏还是偷偷用着吧，其实这种灰色地带的软件更不应该广为流传。\n\n百度网盘和他的所属企业百度都是比较神奇的存在。\n前者是唯一一款在2020年还能经常让用户看到B字节速度的软件。\n后者则是唯一一个在什么领域都能恶心人的企业。\n搜索引擎全是竞价广告……\n贴吧社区被空降和售卖……\n百家号尽是震惊体和抄袭……\n百度知道一句脏话可以成为最佳回答……\n百度全家桶如何卸载是一门深受欢迎的学科\n……\n这么一家丝毫没有底线，丝毫没有荣誉的企业，是中国互联网发展的痔疮，中国互联网形象的癌症。\n——知乎用户彩色狗的回答\n\n\n以前的百度能解答所有的疑问，\n现在的百度只会告诉你快来评论区和小编一起分享自己的想法。\n从前各家的搜索引擎指向各个论坛博客的搜索结果不复存在，\n取而代之的是竞价排名的广告，和为了版权打的你死我活的各种社交媒体。\n我们常常会说一个行业有着巨大的潜力，伴随着行业的成熟，它会发挥更有意义的作用。\n然而就像人变成熟一样，年少时眼里的光芒逐渐消失，取而代之的是向生活低头。\n也许这样做能让互联网产业有更长远的发展，\n但互联网创建的初心似乎已经被人忘记。\n技术不应该是这样用的，生活也不该是这样的\npandownload真的好用，感谢！\n——知乎用户扑棱蛾子的回答\n\n让一个企业走向低谷的方法，就是不用他们的产品。从今以后我不用百度系产品了，搜索引擎换成必应了，贴吧也不逛了，除非有给我发度盘链接还死都不换其他网盘的傻逼，不然不到迫不得已我是不会用百度网盘的。\n终有一天，在BAT中，B要么就是消失，要么就是被取代。\nA和T在走上坡路，而B还在走下坡路。\n我很看好另一个B公司。\n没什么可以说的了，希望Pandownload作者能渡过难关吧。\n写累了，我列了一些我看的文章和视频，感兴趣的可以去康康。\n感谢：\n文章：\n\n如何看待 PanDownload 电脑端作者被捕？\n\n用户Ocean的回答\n用户学长Say的回答\n用户彩色狗的回答\n用户工叔的回答\n用户有木桑的回答\n用户马小帅的回答\n用户扑棱蛾子的回答\n\n\n\n视频：\n\nBV1cV411Z7zu\n\n封面：\n\nCV5653663\n\n文章更新日期：2020.7.18 15:42\n","thumbnail":"//cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.1.8/images/pandownload.jpg","plink":"https://shelter.beaa.cn/posts/pandownload/"},{"title":"ArchLinux折腾小记 | 安装篇","date":"2020-03-14T00:09:44.000Z","date_formatted":{"ll":"2020年3月14日","L":"2020/03/14","MM-DD":"03-14"},"updated":"2020-12-06T09:11:42.306Z","content":"前言\n这篇文章算是鸽了很久了，从还没建博客时就写过一次了，只不过是写在笔记本上的2333。本文的安装教程适用于BIOS/MBR引导(因为我的电脑是BIOS引导)，安装步骤参考官方Wiki和B站up主TheCW的视频进行，UEFI引导的教程暂时不做(鸽了鸽了)\n\n下载镜像\n进入ArchLinux的官方下载页面，找到WorldWide下的China部分，随便选一个镜像站下载系统镜像，这里以中科大(2020年3月版)为例\n验证镜像\n下载完之后我们需要验证镜像的完整性(不过我一般不会这样做的hhh，只要你能保证下载过程中网络没出现什么问题就行)\nWindows\n在镜像站里下载md5sums.txt和sha1sums.txt，然后和镜像对比是否一致就行了(虽然官网也有公示校检码)，至于用啥软件就自己找吧，我这里用的是好压自带的工具\nLinux\n在镜像站里下载“镜像名.iso.sig”的文件，然后执行\n1$ gpg --keyserver-options auto-key-retrieve --verify 镜像名.iso.sig\n刻录镜像\n我们需要一个u盘来刻录我们的镜像\nWindows\n这里用etcher进行刻录，它可以选择镜像后就可以直接刻录，当然你用rufus或其他的也可以\nLinux\n先查看自己u盘的盘符\n1sudo fdisk -l\n然后刻录镜像\n1sudo dd if=你的镜像路径 of=你的u盘盘符 bs=4M\n然后耐心等待…\n启动到Live环境\n\n关机，插上u盘，开机狂按F11(根据你的主板品牌来规定，我的是凄惨红，所以按F11)，在选择界面中用小键盘上下键移动，选择到你的u盘，然后回车\n进入到Arch的引导界面后，回车默认的选项就行了，如果回车后黑屏的，请按Tab键编辑启动参数，加上nomodeset参数即可\n\n安装系统\n设置显示字体(可选)\n1setfont /usr/share/kbd/consolefonts/LatGrkCyr-12x22.psfu.gz\n字体由B站up主TheCW的视频推荐\n连接网络\n连接方法也同样参考于B站up主TheCW的视频\n使用ip-link查看当前互联网状态\n1ip link\n有线连接\n使用动态ip地址分配工具dhcpcd连接网络(后台运行)\n1dhcpcd &amp;\n无线连接\n启用无线网络\n1ip link set wlan0 up\n扫描附近的WIFI\n1iwlist wlan0 scan | grep ESSID\n生成连接无线网络的配置文件\n1wpa_passphrase WIFI名 密码 &gt; internet.conf\n连接无线网络(后台运行)\n1wpa_supplicant -c internet.conf -i wlan0 &amp;\n使用动态ip地址分配工具dhcpcd连接网络(后台运行)\n1dhcpcd &amp;\n更新系统时间\n1timedatectl set-ntp true\n分区\n要求\nBIOS/MBR\n请至少创建两个分区，一个用来作为作为Linux系统的根目录，一个用来作为Swap分区，当然如果你觉得内存够用了可以不用创建Swap分区\nUEFI\n咕咕咕…\n分区工具\ncfdisk（推荐）\ncfdisk拥有GUI界面，操作起来很方便，适合小白\n执行cfdisk命令后你可以看到类似界面，使用方向键进行操作\n主要命令：\n\nFree Space：空闲空间\nNew：新建一个分区\nResize：调整分区大小\nDelete：删除分区\nType：分区类型\nWrite：向硬盘写入更改\nQuit：退出\n\n你的所有操作都完成后，按下Write即可生效，然后按下Quit即可退出\n\n\n图片来源\nfdisk\n查看当前分区\n1fdisk -l\n进入编辑模式\n1fdisk /dev/sda(你的硬盘位置，以/dev/sda为例)\n这时你输入m可以获取fdisk帮助\n主要命令：\n\nd：删除一个分区\nF：查看空闲空间\nl：列出已知的分区类型\nn：创建一个分区\np：查看分区列表\nt：更改分区类型\nw：向硬盘写入更改\nq：不保存更改并退出\ni：查看分区信息\ng：创建一个GPT分区表(会清空当前硬盘数据)\no：创建一个DOS分区表(会清空当前硬盘数据)\n\n输入n创建一个新的分区\n\nPartition number：分区编号，回车默认即可\nFirst sector：扇区起始位置，回车默认即可\nLast sector：扇区结束位置，如果你想创建一个20G的分区，输入+20G后回车即可\nDo you want to remove the signature ?：是否移除分区的签名，说明你之前创建过这个分区，我们选Yes，改为崭新的分区\n\n输入p查看你更改后的分区列表\n确认无误后，输入w写入更改\n格式化\nBIOS/MBR\n格式化主分区(你打算挂载到根目录的分区)\n1mkfs.ext4 /dev/sda6(假设这是你的主分区)\n如果你创建了多个分区，那么这个分区也要格式化(例如你创建了一个分区要挂载到/home上)\n设置swap分区\n1mkswap /dev/sda7(假设这是你的swap分区)\n启用swap分区\n1swapon /dev/sda7\nUEFI\n咕咕咕…\n挂载\nBIOS/MBR\n挂载主分区\n1mount /dev/sda6 /mnt\n如果你有多个分区，请先创建它的目录再挂载(例如你创建了一个分区想要挂载在/home上)\n12mkdir /mnt/homemount /dev/sda8(假设为你要挂载到/home分区) /mnt/home\nUEFI\n咕咕咕…\n更换软件源\n以清华源为例(“+”为添加/输入内容，“-”为删除内容)\n12nano /etc/pacman.d/mirrorlist+ Server=https://mirrors.tuna.tsinghua.edu.cn/archlinux/repo/os/$arch\n刷新软件源\n1pacman -Sy\n安装基本组件\n1pacstrap /mnt base base-devel linux linux-firmware nano dhcpcd wpa_supplicant\n\nbase：ArchLinux最小化安装包\nbase-devel：base附加的软件包\nlinux：Linux内核及模块\nlinux-firmware：Linux的固件文件\nnano：文本编辑器\ndhcpcd：动态ip地址分配工具\nwpa_supplicant：支持WPA无线协议和加密认证的连接工具\n\n生成fstab文件\n1genfstab -U /mnt &gt;&gt; /mnt/etc/fstab\n进入刚刚安装的新系统\n1arch-chroot /mnt\n时间设置\n设置时区(以上海为例)\n1ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n同步系统时间\n1hwclock --systohc\n语言设置\n编辑语言生成的配置文件\n123nano /etc/locale.gen- #en_US.UTF8 UTF-8+ en_US.UTF-8 UTF-8\n生成语言\n1locale-gen\n设置语言\n12nano /etc/locale.conf+ LANG=en_US.UTF-8\n设置主机名\n12nano /etc/hostname+ arch(以arch为例)\n编辑hosts文件\n1234nano /etc/hosts+ 127.0.0.1 localhost+ ::1 localhost+ 127.0.0.1 arch(你的主机名).localdomain arch(你的主机名)\n设置root密码\n12passwd+ root(你的密码)\n安装引导组件\n安装微码(cpu升级驱动用)\nIntel\n1pacman -S intel-ucode\nAMD\n1pacman -S amd-ucode\n安装grub引导器和其他组件\nBIOS/MBR\n1pacman -S grub os-prober ntfs-3g\n\ngrub：引导器，用于引导多个系统\nos-prober：用于探测其他系统\nntfs-3g：用于读取ntfs文件系统的分区\n\n安装grub引导器\n1grub-install --target=i386-pc /dev/sda(注意这是你的硬盘，不是分区)\n生成grub配置文件\n1grub-mkconfig -o /boot/grub/grub.cfg\nUEFI\n咕咕咕…\n收尾工作\n退出chroot环境\n1exit\n杀死网络服务\n1killall wpa_supplicant dhcpcd\n卸载被挂载的分区\n1umount -R /mnt\n重启\n1reboot\n等你的显示屏显示“无信号”的时候，拔掉u盘，然后享受你的ArchLinux吧~\n后记\n呼~划水了两个多月了，今天终于写完了\n你如果还看不懂的话，那你还是去看视频吧2333\n如有问题还请指出，我也还是个小白\n过一段时间还会更新另一篇，毕竟你看到标题也知道我不会就只写这一篇的hhhh\n啊，自己给自己挖了个大坑，真好\n感谢\n视频：\n\nBV11J411a7Tp\n\n文章更新日期：2020.07.16 00:12\n","thumbnail":"//cdn.jsdelivr.net/gh/PikaSama/shelter-images@1.1.8/images/arch-install.webp","plink":"https://shelter.beaa.cn/posts/archnotes-installation/"},{"title":"Hello World","date":"2020-02-16T00:01:00.000Z","date_formatted":{"ll":"2020年2月16日","L":"2020/02/16","MM-DD":"02-16"},"updated":"2020-12-06T09:11:42.306Z","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\n欢迎来到Hexo！这是你的第一个文章，查看文档以获取更多信息。如果你在使用Hexo中遇到任何问题，你可以在常见问题中寻找答案，或在GitHub上发Issue。\n\nQuick Start\n快速开始\nCreate a new post\n创建一个新的文章\n1$ hexo new &quot;My New Post&quot;\nMore info: Writing\n更多信息：写作\nRun server\n运行本地服务器\n1$ hexo server\nMore info: Server\n更多信息：服务器\nGenerate static files\n生成静态文件\n1$ hexo generate\nMore info: Generating\n更多信息：生成文件\nDeploy to remote sites\n部署网站至远程主机\n1$ hexo deploy\nMore info: Deployment\n更多信息：部署\nLast Update: 2020.07.16 00:01\n文章更新日期：2020.07.16 00:01\n","plink":"https://shelter.beaa.cn/posts/hello-world/"},{"title":"About","date":"2020-02-29T20:39:57.000Z","date_formatted":{"ll":"2020年2月29日","L":"2020/02/29","MM-DD":"02-29"},"updated":"2020-12-06T09:11:42.306Z","content":"\n\nZorin\n\n\nI looked upon some blank scape for domain. Upon the bleak walls，upon the white trunks of decayed trees. With the utter depression souls. There was an iceness. A sinking, a sickening of the heart.\n— Edgar Allan Poe The Fall of the House of Usher\n\nA coder, lives in Guangzhou, China.\n一个失败者\n一个喜欢折腾但又次次翻车的沙雕，熬夜冠军，摸鱼冠军，命名鬼才，典型死宅，是个废人的说\n\n介绍\n一个不起眼的小博客，主要用于技术交流和个人闲谈\n博客使用Hexo搭建，由Coding CI部署至Github Pages，使用又拍云CDN加速\n网站主题会不定期更换(花心大萝卜石锤，内心：我全都要.jpg)\n网站名字的由来\n如果你认得出网站的favicon(标签页旁的logo)，那你应该知道这个名字其实来源于 Porter Robinson 和 Madeon 合作的一首曲子《Shelter》，这首Midtempo风格的歌我当初循环了很多遍，同时MV的故事也很感人(凛是真的好看！)，所以就给网站取名 “Shelter” 了\n联系方式\nGithub: PikaSama\n邮箱: pikasama@qq.com\nQQ: 2108586824\nBilibili: Zorin_\n网易云音乐: Zorin_\n瞎扯淡/网站博主动态\n2020.10.18\n一个半月没更新动态了，以后也没什么时间维护博客，可能会在节假日时间抽空写一下文章\n这次算是一个大更新吧，只不过很多是细节上的优化，新功能很少\n习惯了js变量提升的我还是看不顺眼用箭头函数命名函数这个方式，看来还是用在匿名函数/回调函数香啊\n\n采用Promise+async/await方式异步执行代码，抛弃setTimeout的瀑布流式代码\n合并多个js文件，减少请求次数\n压缩js文件，提升访问速度\n设置面板的统计功能支持文章访问量统计，兼容主题访问统计样式\n更新主题，更新hexo版本\n抛弃cookie，采用localStorage方式存储数据\n废弃无用的新人状态，优化新人转正的方式\n优化主题黑暗模式的适配，适配MiniValine的黑暗模式\n设置面板新添加载动画，适配黑暗模式\n设置面板增添新功能：动态文字\n简化配置文件，使用脚本加载器，对应类型页面加载对应文件，确保需要全局使用的函数能提前初始化\n更新代码高亮样式\n更新文章、页面\n写了两个没什么用的项目，欢迎围观：spider-checkupdate，spider-manga\n\n2020.8.26\n\n设置面板增加“自定义表情包”功能\n一些黑暗模式的样式修复\n评论系统可能不会立即生效自定义的表情包，故添加评论系统重载的按钮，可在页面加载完后自动跳转至评论\n可能是这个月的最后一次更新(这个暑假好像都没啥贡献，我好蔡啊)\n\n2020.8.19\n\n一些bug的修复\n优化代码逻辑\n取消默认主题修改强调色的功能，将默认强调色加入调色盘(主要是懒得单独写代码去适配)\n\n2020.8.18\n有一段时间没写动态了呐\n\n新文章：Inside主题进阶配置 | 附加篇\n帮助页面完善\n新增：更改强调色时，遵循侧边栏背景的设置来决定是否覆盖主题的侧边栏背景\n一些bug的修复\n一些新坑\n\n2020.8.11\n\n新增通知系统，含新人提示和公告通知\n新增设置面板功能\njs代码优化\n新手教程(还在写，进度0%)\n\n通知系统应该写了2天，设置面板写了差不多有4天了，把文件传到Github Releases真是一个愚蠢的选择(你去看我的releases可以知道我一天为了测试能发多少个版本刷版本号石锤)，然后决定放在自己的COS上，开发期间也在不断优化，把之前写的代码也重构了(注释也变简略了些)，每天都是忙到凌晨2点，浏览器的标签页只看得见图标，不禁感叹自己真是个彩笔。\n2020.8.1\n更改字体加载源(loli.net)，提升加载速度\n2020.7.31\n\n个人主页的静态资源使用JsDelivr CDN加速，加快访问速度(个人主页：Home | Zorin)\n点击特效js延迟加载时间\n\n2020.7.30\n才没喝多少口的柠檬茶(大杯)就被我倒洒了…(没错我在水动态)\n2020.7.27\n\n新文章出炉，内容较多，持续更新\n完善点击特效，字数统计功能\nLive2d看板娘显示修复\n\n2020.7.20\n取消“Abyss”分类和页面，Abyss分类的新文章只会在博客驻留1天\n2020.7.19\n\n新增文章字数统计和阅读时长功能\n如果文章引用了歌曲，可能会因为网络环境导致字数统计精确度降低\n\n2020.7.18\n新增代码块复制功能\n2020.7.16\n\n网站主题改为inside（本地测试耗时2天，感谢Theme Inside群里的大佬们的帮助）\n主题含有调色板，可以更改网站颜色样式\n因主题原因，深渊分类的文章无法在首页隐藏，请见谅\n网站直接使用Coding CI部署至Github，部署速度加快\n\n2020.7.9\n\n因遇到无法解决的问题，网站取消存储在又拍云，选择使用又拍云CDN加速Gthub，并设置解析将国内访问解析到又拍云CDN，国外访问解析到源站Github\n因个人原因，博客停更一段时间，空下时间去折腾点其他的东西，不过我还会水动态的 说白了是灵感枯竭\n\n2020.7.5\n源码迁移至Coding，使用Coding CI将源码推送至Github，Github再用Travis CI部署博客(禁止套娃hhh)\n2020.7.4\n\n诈尸更新，网站迁移至又拍云并使用CDN，大大提升了访问速度，并使用Travis CI进行持续集成，可在多端轻松部署\n你可能会发现侧边栏的主页按钮变白了，并且和下面按钮的间距不一样，这是因为侧边栏按钮的代码被我分割成主页部分和其他部分了，而且找不到相符合的颜色，所以会出现这样的状况，如果我不这样做，就会出现按钮打开的是空白页面的问题\n\n2020.6.20\n\n评论系统改为MiniValine，图片使用CDN加速(之前文章引用的图片还未加速)\n最近Fork了一个Valine的表情包项目，用在MiniValine上，可以使用脚本一建生成图片列表\n项目地址：Blog-Emoticons\n\n2020.6.7\n失踪人口回归，填完了一个坑，博客开始对外开放(向朋友宣传)\n2020.5.11\n个人主页: Home | Zorin\n2020.4.16\n\n为Pandownload哀悼，感谢你陪伴了我2年\n[数据删除]\n近期应该会写一个关于Pandownload的文章\n闲的蛋疼用写了一个个人主页，放在腾讯云COS上，访问速度不咋样，看看能给我烧掉多少钱，网址之后会更新上\n\n2020.4.5\n\n[数据删除]\narchlinux安装小记的文章又被吞掉一部分篇幅了(sftp没同步成功，手残把没同步成功的文章本地编辑，然后旧的文章覆盖了新的文章- -)\n我在Linux里还有之前写好的文章，用Linux Reader导出到Windows再用SFTP同步过去，成功恢复\n\n2020.4.4\n为了探究Windows下的vscode的ssh连接不稳定的问题（Linux没这个情况），在备份了博客源码的情况下进行一系列操蛋的操作（包括但不限于删掉Termux回炉重造），最后发现好像是手机一息屏就会发生这个问题2333333，这该死的休眠策略\n2020.x.x\n不记得了…\n2020.1.xx\n创建本站\n感谢\n博客引擎\n\nHexo\n\n托管服务\n\nGithub Pages\n\n网站主题\n\nAyer\nInside\n\n评论系统\n\nMiniValine\nValine-Admin\n\n统计\n\n不蒜子统计\n\nCDN\n\nJsDelivr\n又拍云\n\n页面初始日期：2020.2.29 20:39\n页面更新日期：2020.10.18 18:57\n","plink":"https://shelter.beaa.cn/about/"},{"title":"Abyss","date":"2020-03-01T21:26:24.000Z","date_formatted":{"ll":"2020年3月1日","L":"2020/03/01","MM-DD":"03-01"},"updated":"2020-12-06T09:11:42.306Z","content":"“你的脑海中闪现出几个似曾相识的画面，突然，眼前的避难所(Shelter)消失了，你陷入了回忆的深渊(Abyss)”\n介绍\n\n深渊是这个博客中的特殊分类，主要内容为消极情绪的言论(丧)，任何含有“abyss”分类的文章都会被加密，需要密码进行访问。创建这个分类也只是让我有地方宣泄自己的不愉快而已，但博客是用来分享技术和知识的网站，这种心情琐记并不适合出现在博客，所以该分类的文章存活期只有1天，即只会在首页显示1天\n\n\n入口\n你可以通过各种方式查看深渊(Abyss)的文章，除了首页，文章的标题一般为“Abyss-xxxxxx”\n文章密码为文章标题中&quot;xxxxxx&quot;的部分\n\n举个栗子：\n\n归档（按时间排列）\n分类（深渊分类）\n标签（标签入口不唯一）\nMore…\n\n\n\n注意\nFBI WARNING\n\n深渊分类的文章，你心情好的时候来看可能会致郁，心情不好的时候来看可能会治愈，所以别当我没提醒过你，请谨慎选择，造成的后果请你自己承担。（手动@某某大团结事件，不过我这个小破站也不会有什么人来hhhh）有人可能说我在传播负能量，害，你说是就是吧，我只是在陈述现实罢了，你怕不是还活在自己的童话世界里。\n\n最后奉上一句：\n“当你在凝视深渊的时候，深渊也在凝视着你”\n页面初始日期：2020.3.1 21:26\n页面更新日期：2020.8.26 12:54\n","plink":"https://shelter.beaa.cn/abyss/"},{"title":"Help","date":"2020-08-02T21:14:13.000Z","date_formatted":{"ll":"2020年8月2日","L":"2020/08/02","MM-DD":"08-02"},"updated":"2020-12-06T09:11:42.306Z","content":"前言\n嘿！很高兴你能来到我的博客，在参观我的博客之前，我希望你能了解一下《博客的食用方法》。\n对于很多第一次来到我的博客的人来说，可能是很懵逼的，特别是移动端。\n所以，有一个帮助页面是很不错的，这样可以一定程度上提升他们的使用体验。\n首页\n首页是你最有可能第一个访问到的页面\n如果你想打开某一个文章，你需要点击文章的标题或封面，而不是内容摘要\n侧边栏\n侧边栏中展示着博客的信息和一些页面的快捷跳转方式\n对于桌面端，如果你的分辨率较低，请点击右下角的小圆点，找到“”并点击即可显示侧边栏；如果你的分辨率较高，你会直接看到侧边栏\n对于移动端，请点击右下角的小圆点，找到“”并点击即可显示侧边栏\n显示更多选项\n侧边栏下方默认只有4个选项+1个更多选项按钮，点击“📥 More”即可显示更多选项，再次点击即可关闭\n调色盘\n调色盘是在侧边栏中的一个切换主题和颜色的功能\n具有多个图标和颜色的地方即为调色盘\n调色盘第一行的选项均为主题，除第一个为默认主题(会修改强调色)，其余主题均不修改强调色，可与下面三行的“强调色”搭配\n注：对于移动端，在切换强调色时会覆盖主题设置的侧边栏背景，如果需要还原主题的侧边栏背景，再次点击一次主题即可（现在默认会自动再点击一次）\n你可以在设置面板中找到“侧边栏背景”项进行设置\n访客统计\n\n\nPV：访问次数，不论IP，只要访问了就算一次\n\n\nUV：来访用户数量，一个IP算一个\n\n\n文章访问量也以PV为准\n请不要过度相信访客统计的数据，仅供参考！\n大多数家庭的路由器都属于动态IP，所以每天你的IP地址都在发生改变。我每天都需要对网站进行测试，所以会访问网站很多次，可以说访问次数中90%都是因我而积累的。\n所以，该数据仅供参考，请不要当真:P\n小部件\n如上文所说，小部件即屏幕右下方的小圆点，点击可展开多个功能的按钮\n\n\n：打开/关闭侧边栏\n\n\n：搜索功能\n\n\n：返回至最上方\n\n\n：返回至最下方\n\n\n：显示文章目录\n\n\n通知\n新人通知\n如果你是第一次来到博客，那么你就会看到新人通知，它会引导你来到这个页面\n公告通知\n在你转正成为普通访客后，公告通知会出现\n公告通知用于传达博主的最新消息或文章的更新消息\n如果你想关闭公告通知，请点击“确认公告”的按钮\n如果\n有新的公告，那么公告通知就还会显示，直到你确认公告\nLive2d看板娘\n顾名思义，她是一个由Live2d驱动的二次元女孩，她会显示在侧边栏和文章之间\n如果你感到无聊，可以与她进行互动，可以玩小游戏(WASD/方向键移动，SPACE攻击)\n如果你不需要她了，你可以点击“x”，让她离开\n不过放心，你还可以点击右侧的“看板娘”按钮来让她回来\n注：该功能仅桌面端享有:[\n你可以在设置面板中设置“Live2d看板娘”的显示状态\n评论系统\n博客使用Minivaline作为评论系统\nMiniValine具有美观的界面，可自定义多种表情包\n在发表评论前，你必须要填写以下信息\n\n\n用户名：显示昵称\n\n\n邮箱：用于发送邮件\n\n\n可选信息\n\n网站：个性化展示\n\n注：邮箱请尽量填写你的常用邮箱，确保能及时收到邮件，当你的评论收到回复时，系统会向你发送一封邮件\n设置面板\n设置面板可以让访客自定义配置，达到自己想要的浏览效果\n为了实现以上功能，博客会在你的设备中存储少量的数据，如果数据被清除了那么配置将会失效\n以下均可在设置面板中进行配置(代码块复制除外)\n代码块复制\n博客提供了代码块复制功能，样式文件来源于主题Ayer\n对于桌面端，只需要将鼠标移动至代码块内，复制按钮便会出现，点击后即可复制\n对于移动端，需要点击代码块区域，复制按钮便会出现，点击后即可复制\n字数统计\n博客的文章提供字数统计和阅读时间的功能\n字数统计拥有两种模式，一种是文章字数和代码字符数独立，另一种是字数和代码字符数合并(仍会另外显示代码字符数)，默认模式为前者\n注：字数统计和阅读估计的时间仅供参考，两者都可能与实际数据有差异\n阅读时间估计算法：字数/600 + 代码字符数/800 + 图片数/10\n阅读时间过长的原因：\n\n代码过多，文章有时候需要引用/展示一大堆代码，但这对一般人来说没有什么用处，他们需要的是“核心”代码(能让他们不思考直接CV的代码)，所以他们会选择略过，这就导致了一般人阅读这类文章的时间要短的多。\n如果每个人都能用心去看每个代码，理解它的原理，这所花费的时间就和估计的时间相似(甚至更久)了。\n\n点击特效\n博客提供三种点击特效，默认模式为第一种\n\n爱心特效\n粒子波动特效\n粒子爆炸特效\n\n后记\n相信你对博客已经有了一定的了解，现在，点击下方的“已阅“按钮，你就可以尽情浏览了～\n页面初始日期：2020.8.2 21:44\n页面更新日期：2020.10.18 19:06\n","plink":"https://shelter.beaa.cn/help/"},{"title":"Settings","date":"2020-08-04T16:10:11.000Z","date_formatted":{"ll":"2020年8月4日","L":"2020/08/04","MM-DD":"08-04"},"updated":"2020-12-06T09:11:42.306Z","content":"用户设置\n主题设置\n黑暗模式\n默认主题\n默认强调色\n侧边栏背景\n自定义表情包\n默认点击特效\nLive2d看板娘\n字数统计\n动态文字\n","plink":"https://shelter.beaa.cn/settings/"},{"title":"Todo","date":"2020-07-17T18:01:13.000Z","date_formatted":{"ll":"2020年7月17日","L":"2020/07/17","MM-DD":"07-17"},"updated":"2020-12-06T09:11:42.306Z","content":"To-do List\n待办事项清单 我是如何咕咕咕的\n每个月清空一次\nPinned :L\n\n继续优化加载速度…\n\nDone  :)\n\n抛弃setTimeout()定时器，采用Promise+async/await方式异步执行代码\n合并多个js\n压缩js，提升访问速度\n设置面板：统计功能支持文章访问量统计，兼容主题访问统计样式\n更新主题，更新hexo版本至5.0\n抛弃cookie，采用localStorage方式存储数据\n废弃无用的新人状态，优化新人转正的方式\n优化主题黑暗模式的适配，适配MiniValine的黑暗模式\n设置面板新添加载动画，适配黑暗模式\n设置面板：新功能，动态文字\n简化配置文件，使用脚本加载器，确保自定义函数能提前初始化\n更新代码高亮样式\n更新文章、页面\n\nNot yet  :P\n\n更新js注释\n设置面板重置功能\n新文章：nodejs爬虫练习（已鸽）\n新文章：[持续更新]ArchLinux折腾小记 | 配置篇（已鸽）\n调色板改进\n\nHistory :D\nSeptember\n\nSome experimental things.\n\nAugust\n\n更换字体加载源(loli.net)\n优化个人主页\n通知系统：新人通知提示，公告通知\n设置面板，提供用户自定义的空间\n一些js代码优化\n新文章：[持续更新]Inside主题进阶配置 | 附加篇\n帮助页面\n自定义表情包功能\n评论系统重载及定向按钮\n\nJuly\n\n代码块改为黑色\n默认主题中小部件颜色改为浅蓝色\n代码复制功能\n文章字数统计，阅读时长估计\nLive2d看板娘(仅限桌面端)\n新文章\n完善字数统计功能\n完善点击特效功能\nLive2d看板娘修复\n\nYu me\n\n学会JavaScript(正学)\n\n学会TypeScript\nVue\nElectron\n\n\n学会网络通信原理\n学会Java(有生之年)\n\n学会Kotlin\n\n\n\n立志成为一个有梦想的咸鱼\n页面初始日期：2020.7.17 18:01\n页面更新日期：2020.10.18 18:30\n","plink":"https://shelter.beaa.cn/todo/"}]